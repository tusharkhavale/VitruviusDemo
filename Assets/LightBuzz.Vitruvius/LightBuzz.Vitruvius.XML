<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LightBuzz.Vitruvius</name>
    </assembly>
    <members>
        <member name="T:LightBuzz.Vitruvius.Avateering.Avateering">
            <summary>
            Animates a 3D model based on the joint positions of the human joints.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.IsEnabled">
            <summary>
            Checks whether the avateering functionality is enabled.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Avateering.humanBoneList">
            <summary>
            Specifies the human bones.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Avateering.humanBoneToJointTypeIndex">
            <summary>
            Maps human body bone to joint type as index (normal view).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Avateering.humanBoneToJointTypeIndexMirrored">
            <summary>
            Maps human body bone to joint type as index (mirrored view).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Avateering.jointTypeToFBXBone">
            <summary>
            Maps joint type to FBX bone (normal view).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Avateering.jointTypeToFBXBoneMirrored">
            <summary>
            Maps joint types to FBX bone (mirrored view).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Avateering.jointIndexToFBXBone">
            <summary>
            Maps joint index to FBX bone (normal view). (e.g. Avateering.SpineBase)\nMirrored view doesn't require mapping.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Avateering.mirroredJoints">
            <summary>
            Holds mirrored joints of each joint.\n(e.g. mirroredJoints[JointType.ShoulderLeft] returns its mirror, JointType.ShoulderRight)
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.SpineBase">
            <summary>
            Matches SpineBase joint to 3D model bone index (0).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.SpineMid">
            <summary>
            Matches SpineMid joint to 3D model bone index (1).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.SpineShoulder">
            <summary>
            Matches SpineShoulder joint to 3D model bone index (2).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.Neck">
            <summary>
            Matches Neck joint to 3D model bone index (3).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.ShoulderLeft">
            <summary>
            Matches ShoulderLeft joint to 3D model bone index (4).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.ElbowLeft">
            <summary>
            Matches ElbowLeft joint to 3D model bone index (5).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.WristLeft">
            <summary>
            Matches WristLeft joint to 3D model bone index (6).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.ShoulderRight">
            <summary>
            Matches ShoulderRight joint to 3D model bone index (7).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.ElbowRight">
            <summary>
            Matches ElbowRight joint to 3D model bone index (8).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.WristRight">
            <summary>
            Matches WristRight joint to 3D model bone index (9).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.HipLeft">
            <summary>
            Matches HipLeft joint to 3D model bone index (10).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.KneeLeft">
            <summary>
            Matches KneeLeft joint to 3D model bone index (11).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.AnkleLeft">
            <summary>
            Matches AnkleLeft joint to 3D model bone index (12).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.HipRight">
            <summary>
            Matches HipRight joint to 3D model bone index (13).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.KneeRight">
            <summary>
            Matches KneeRight joint to 3D model bone index (14).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.AnkleRight">
            <summary>
            Matches AnkleRight joint to 3D model bone index (15).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.BodySmoothness">
            <summary>
            Smoothness takes a value between 0 (Not Smooth) and 1 (Smooth)
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Avateering.FaceSmoothness">
            <summary>
            Smoothness takes a value between 0 (Not Smooth) and 1 (Smooth)
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.Enable">
            <summary>
            Enables avatar animations.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.Disable">
            <summary>
            Stops avatar animations.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.Update(LightBuzz.Vitruvius.Avateering.Model,Windows.Kinect.Body)">
            <summary>
            Animates the specified Model according to the specified body.
            </summary>
            <param name="model">The 3D model to update.</param>
            <param name="body">The human body that corresponds to the 3D model.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.Update(LightBuzz.Vitruvius.Avateering.Model,LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Animates the specified Model according to the specified captured body.
            </summary>
            <param name="model">The 3D model to update.</param>
            <param name="body">The human captured body that corresponds to the 3D model.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.Update(LightBuzz.Vitruvius.Avateering.FaceModel,LightBuzz.Vitruvius.Face)">
            <summary>
            Updates the specified FaceModel according to the specified face.
            </summary>
            <param name="model">The 3D face model to update.</param>
            <param name="face">The human face that corresponds to the 3D face model.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.GetHumanBoneToJointTypeIndex(System.Int32,System.Boolean)">
            <summary>
            Gets the joint type as index of the specified human bone.
            </summary>
            <param name="humanBoneIndex">The index of a human bone from the <see cref="F:LightBuzz.Vitruvius.Avateering.Avateering.humanBoneList"/>.</param>
            <param name="mirrored">Determines whether the 3D model is mirrorred.</param>
            <returns>The corresponding joint type as index.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.GetHumanBoneToJointTypeIndex(UnityEngine.HumanBodyBones,System.Boolean)">
            <summary>
            Gets the joint type as index of the specified human bone.
            </summary>
            <param name="humanBone">The specified human bone.</param>
            <param name="mirrored">Determines whether the 3D model is mirrorred.</param>
            <returns>The corresponding joint type as index.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.GetJointTypeToFBXBoneIndex(System.Int32,System.Boolean)">
            <summary>
            Gets the fbx bone index of the specified joint index (e.g. Avateering.SpineBase).
            </summary>
            <param name="jointIndex">The specified joint index.</param>
            <param name="mirrored">Determines whether the 3D model is mirrorred.</param>
            <returns>The corresponding fbx bone index.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Avateering.GetJointTypeToFBXBoneIndex(Windows.Kinect.JointType,System.Boolean)">
            <summary>
            Gets the fbx bone index of the specified joint type.
            </summary>
            <param name="joint">The specified joint type.</param>
            <param name="mirrored">Determines whether the 3D model is mirrorred.</param>
            <returns>The corresponding fbx bone index.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Avateering.Bone">
            <summary>
            Represents an animatable 3D model bone.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Bone.Transform">
            <summary>
            The bone transform.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Bone.OriginRotation">
            <summary>
            The origin orientation.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Bone.#ctor(UnityEngine.Transform)">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.Avateering.Bone"/>.
            </summary>
            <param name="transform">The initial bone transform.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Bone.Reset">
            <summary>
            Resets the current bone.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Bone.EnforceTPose(UnityEngine.Quaternion)">
            <summary>
            Transforms the current bone to apply a T-pose on the 3D model.
            </summary>
            <param name="offset">The offset used to transform the current bone.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Bone.EnforceLeftJointTPose(UnityEngine.Vector3,UnityEngine.Transform,System.Single)">
            <summary>
            Transforms the current joint to apply a T-pose on the 3D model.
            </summary>
            <param name="rotationAxis">The rotation axis.</param>
            <param name="joint">The joint where the transformation is applied.</param>
            <param name="angle">The rotation angle.</param>
            <returns>The corresponding quaternion after the transformation is applied.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Bone.EnforceRightJointTPose(UnityEngine.Vector3,UnityEngine.Transform,System.Single)">
            <summary>
            Transforms the current joint to apply a T-pose on the 3D model.
            </summary>
            <param name="rotationAxis">The rotation axis.</param>
            <param name="joint">The joint where the transformation is applied.</param>
            <param name="angle">The rotation angle.</param>
            <returns>The corresponding quaternion after the transformation is applied.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Avateering.FaceModel">
            <summary>
            Describes a 3D face model.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.FaceModel.faceBody">
            <summary>
            The face body that contains all the face points.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.FaceModel.IsInitialized">
            <summary>
            Determines whether the model has been initialized.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.FaceModel.FaceNodes">
            <summary>
            Face nodes of the model.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.FaceModel.FacePointPositions">
            <summary>
            The face points of the model in <see cref="T:UnityEngine.Transform"/>.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.FaceModel.FaceBody">
            <summary>
            The face body that contains all the face points.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.Initialize">
            <summary>
            Initializes the model.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.Dispose">
            <summary>
            Cleans any resources attached to this model.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.GetFaceNode(System.Int32)">
            <summary>
            Gets a <see cref="T:FaceNode"/> based on the given node index.
            </summary>
            <param name="index">The given node index.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.GetFacePoint(System.Int32)">
            <summary>
            Gets a <see cref="T:UnityEngine.Transform"/> based on the given node index.
            </summary>
            <param name="index">The given point index.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.InitializeBody">
            <summary>
            Called when initialization succeeded.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.OnUpdate">
            <summary>
            Updates the face body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.Reset">
            <summary>
            Called to reset the position of the model.
            </summary>
            <returns>True if the model was successfully reset. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FaceModel.ValidateBody">
            <summary>
            Determines whether the given Face body is valid.
            If invalid, Initialization will fail.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Avateering.Pose">
            <summary>
            Represents a body Snapshot that contains Joint Quaternions.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Avateering.FBX">
            <summary>
            Represents an FBX 3D model.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.ValidateBody">
            <summary>
            Determines whether the given Body is valid.
            If invalid, Initialization will fail.
            </summary>
            <returns>True if the Body has Animator and is humanoid. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.InitializeBody">
            <summary>
            Called when initialization succeeded, before updating the bones.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.EnforceTPose">
            <summary>
            Enforces the current 3D model to a T-Pose.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.OnPreUpdate">
            <summary>
            Called before updating the body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.OnUpdate">
            <summary>
            Updates the body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.OnPostUpdate">
            <summary>
            Called after the body update.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.SetBonePosition(Windows.Kinect.JointType,UnityEngine.Vector3,UnityEngine.Space)">
            <summary>
            Sets the position of the specified bone.
            </summary>
            <param name="joint">The body joint.</param>
            <param name="position">The position to apply.</param>
            <param name="space">The coordinate space in which to operate when setting the bone.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.FBX.OnReset">
            <summary>
            Resets the position and rotation of the model.
            </summary>
            <returns>True if the model wes reset successfully. False otherwise.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Avateering.Model">
            <summary>
            Describes a generic 3D model. Should be overridden.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Model.updateModel">
            <summary>
            Determines whether the model should update.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Model.mirroredModel">
            <summary>
            Determines whether the model is mirrorred.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Model.useFeetOffset">
            <summary>
            Determines whether the model should use the feet offset.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Model.placeModelInWorldSpace">
            <summary>
            Place the model in world space.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Model.worldSpaceUnits">
            <summary>
            World space units.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Model.body">
            <summary>
            The animatable body.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Avateering.Model.preBaseJoint">
            <summary>
            The PreBase joint.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Model.IsInitialized">
            <summary>
            Determines whether the model has been initialized.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Model.JointInfos">
            <summary>
            Joint information of the model.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Model.Bones">
            <summary>
            The bones of the model.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Model.FeetHeightFromSpineBase">
            <summary>
            The feet height from Spine Base;
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Model.Body">
            <summary>
            The animatable body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Avateering.Model.PreBaseJoint">
            <summary>
            The PreBase joint.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.Initialize">
            <summary>
            Initializes the model.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.Dispose">
            <summary>
            Cleans any resources attached to this model.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.GetJointInfo(System.Int32)">
            <summary>
            Gets a <see cref="T:JointInfo"/> based on the given joint index.
            </summary>
            <param name="joint">The given joint index. (e.g. Avateering.SpineBase)</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.GetBone(System.Int32)">
            <summary>
            Gets a <see cref="T:LightBuzz.Vitruvius.Avateering.Bone"/> based on the given joint index.
            </summary>
            <param name="joint">The given joint index. (e.g. Avateering.SpineBase)</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.GetBone(Windows.Kinect.JointType)">
            <summary>
            Gets a <see cref="T:LightBuzz.Vitruvius.Avateering.Bone"/> based on the given <see cref="T:Windows.Kinect.JointType"/>.
            </summary>
            <param name="joint">The given JointType.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.FindBone(System.String)">
            <summary>
            Find a <see cref="T:LightBuzz.Vitruvius.Avateering.Bone"/> based on the given bone name.
            </summary>
            <param name="bone"></param>
            <returns>A bone. Null if it's not listed</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.UpdateBone(System.Int32,System.Single)">
            <summary>
            Updates the specified joint using the given rotation sharpness.
            </summary>
            <param name="joint">The index of the joint to update.</param>
            <param name="rotationSharpness">The rotation sharpness. Defaults to 15. A higher value will make it more jagged. Lower values will make it more smooth.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.OnPreUpdate">
            <summary>
            Called before updating the body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.OnUpdate">
            <summary>
            Updates the body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.OnPostUpdate">
            <summary>
            Called after the body update.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.Reset">
            <summary>
            Called to reset the position and rotation of the model.
            </summary>
            <returns>True if the model was successfully reset. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.InitializeBody">
            <summary>
            Called when initialization succeeded, before updating the bones.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.Model.ValidateBody">
            <summary>
            Determines whether the given Body is valid.
            If invalid, Initialization will fail.
            </summary>
            <returns>The base method returns false by default.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Avateering.NamespaceDoc">
            <summary>
            Animates 3D models according to the movements of the players.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Avateering.JointExtensions">
            <summary>
            Provides some joint type extensions.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Avateering.JointExtensions.Mirrored(Windows.Kinect.JointType,System.Boolean)">
            <summary>
            Returns the normal or mirrored joint type.
            </summary>
            <param name="joint">The original joint type.</param>
            <param name="mirror">True for mirrored mode. False for normal mode.</param>
            <returns>The normal or mirrored joint type.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.BitmapGenerator`1">
            <summary>
            Describes a generic bitmap generator.
            </summary>
            <typeparam name="T">The type of frame (<see cref="T:Windows.Kinect.ColorFrame"/>, <see cref="T:Windows.Kinect.DepthFrame"/>, <see cref="T:Windows.Kinect.InfraredFrame"/>, <see cref="T:Windows.Kinect.BodyIndexFrame"/>, etc).</typeparam>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Pixels">
            <summary>
            Returns the RGB pixel values.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Width">
            <summary>
            Returns the width of the bitmap.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Height">
            <summary>
            Returns the height of the bitmap.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BitmapGenerator`1.Bitmap">
            <summary>
            Returns the actual bitmap.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapGenerator`1.Update(`0)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.ColorBitmapGenerator">
            <summary>
            Creates the bitmap representation of a Kinect Color frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.ColorBitmapGenerator.PixelsResized">
            <summary>
            The byte array of the resized frame.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorBitmapGenerator.Update(Windows.Kinect.ColorFrame,Windows.Kinect.ColorImageFormat)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect color frame.</param>
            <param name="format">The specified color format.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorBitmapGenerator.Update(Windows.Kinect.ColorFrame,LightBuzz.Vitruvius.ColorFrameResolution)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect color frame.</param>
            <param name="resolution">The specified frame resolution.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorBitmapGenerator.Update(Windows.Kinect.ColorFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect color frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.DepthBitmapGenerator">
            <summary>
            Creates the bitmap representation of a Kinect Depth frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.HighlightedPixels">
            <summary>
            Returns the RGB pixel values with the players highlighted.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.HighlightedBitmap">
            <summary>
            Returns the actual bitmap with the players highlighted.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.DepthData">
            <summary>
            Returns the current depth values.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.DepthBitmapGenerator.BodyData">
            <summary>
            Returns the body index values.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.DepthBitmapGenerator.Update(Windows.Kinect.DepthFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect depth frame.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.DepthBitmapGenerator.Update(Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame)">
            <summary>
            Updates the bitmap with new frame data and highlights the players.
            </summary>
            <param name="frame">The specified Kinect depth frame.</param>
            <param name="bodyIndexFrame">The specified Kinect body index frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.GreenScreenBitmapGenerator">
            <summary>
            Removes the background of a Kinect frame and keeps the tracked players only.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._depthData">
            <summary>
            The depth values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._bodyIndexData">
            <summary>
            The body index values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._colorData">
            <summary>
            The RGB pixel values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._colorPoints">
            <summary>
            The color points used for the background removal (green-screen) effect.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GreenScreenBitmapGenerator._depthPoints">
            <summary>
            The depth points used for the background removal (green-screen) effect in HD.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.CoordinateMapper">
            <summary>
            The Coordinate Mapper used to map between the depth and color frames.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.#ctor">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.GreenScreenBitmapGenerator"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.#ctor(Windows.Kinect.CoordinateMapper)">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.GreenScreenBitmapGenerator"/>.
            </summary>
            <param name="mapper">The coordinate mapper used for the background removal.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.Update(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="colorFrame">The specified color frame.</param>
            <param name="depthFrame">The specified depth frame.</param>
            <param name="bodyIndexFrame">The specified body index frame.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.GreenScreenBitmapGenerator.UpdateHD(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.Int32,System.Int32)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="colorFrame">The specified color frame.</param>
            <param name="depthFrame">The specified depth frame.</param>
            <param name="bodyIndexFrame">The specified body index frame.</param>
            <param name="beginX">Begin reading pixels from X.</param>
            <param name="endX">End reading pixels until X.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.InfraredBitmapGenerator">
            <summary>
            Creates the bitmap representation of a Kinect infrared frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.InfraredBitmapGenerator.InfraredData">
            <summary>
            Returns the current infrared values.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.InfraredBitmapGenerator.Update(Windows.Kinect.InfraredFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect infrared frame.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Axis">
            <summary>
            Represents an axis from the 3D space.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Axis.X">
            <summary>
            The X axis.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Axis.Y">
            <summary>
            The Y axis.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Axis.Z">
            <summary>
            The Z axis.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.BodyWrapper">
            <summary>
            Represents a Kinect <see cref="T:Windows.Kinect.Body"/>. Kinect does not allow us to explicitly create a new <see cref="T:Windows.Kinect.Body"/> object.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.TrackingId">
            <summary>
            The tracking identifier of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.IsTracked">
            <summary>
            Determines whether the current body is tracked.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.LeanTrackingState">
            <summary>
            The lean tracking state of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.Lean">
            <summary>
            The lean point of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandLeftConfidence">
            <summary>
            The tracking confidence of the left hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandRightConfidence">
            <summary>
            The tracking confidence of the right hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandLeftState">
            <summary>
            The state of the left hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.HandRightState">
            <summary>
            The state of the right hand.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.Joints">
            <summary>
            The joints of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.Map2D">
            <summary>
            The joint mapping on 2D of the current body.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BodyWrapper.JointOrientations">
            <summary>
            The joint orientations of the current body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.Set(Windows.Kinect.Body,Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Copies a <see cref="T:Windows.Kinect.Body"/> object into the current <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.
            </summary>
            <param name="body">The body to copy.</param>
            <param name="coordinateMapper">The coordinate mapper.</param>
            <param name="visualization">The visualization mode (color/depth/infrared).</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.Set(LightBuzz.Vitruvius.BodyWrapper,Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Copies a <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object into the current <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.
            </summary>
            <param name="body">The body to copy.</param>
            <param name="coordinateMapper">The coordinate mapper.</param>
            <param name="visualization">The visualization mode (color/depth/infrared).</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.Create(Windows.Kinect.Body,Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Creates a new <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> according to the specified parameters.
            </summary>
            <param name="body">The original body to copy.</param>
            <param name="coordinateMapper">The coordinate mapper that will create a 2D rerpesentation of the joints.</param>
            <param name="visualization">The Color, Depth, or Infrared visualization type.</param>
            <returns>A complete body wrapper.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.Create(LightBuzz.Vitruvius.BodyWrapper,Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Creates a new <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> according to the specified parameters.
            </summary>
            <param name="body">The original body to copy.</param>
            <param name="coordinateMapper">The coordinate mapper that will create a 2D rerpesentation of the joints.</param>
            <param name="visualization">The Color, Depth, or Infrared visualization type.</param>
            <returns>A complete body wrapper.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapper.SetMap2D(Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            
            </summary>
            <param name="coordinateMapper"></param>
            <param name="visualization"></param>
        </member>
        <member name="T:LightBuzz.Vitruvius.ColorFrameResolution">
            <summary>
            Represents a custom color frame resolution.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_1920x1080">
            <summary>
            1920x1080 (native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_960x540">
            <summary>
            960x540 (1/2 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_640x360">
            <summary>
            640x360 (1/3 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_480x270">
            <summary>
            480x270 (1/4 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_384x216">
            <summary>
            384x216 (1/5 native).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.ColorFrameResolution.Resolution_192x108">
            <summary>
            192x108 (1/10 native).
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Constants">
            <summary>
            Keeps some commonly used Kinect constant values.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DPI">
            <summary>
            Kinect DPI.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.BYTES_PER_PIXEL">
            <summary>
            Bytes per pixel.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_COLOR_WIDTH">
            <summary>
            The default color frame width (1920).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_COLOR_HEIGHT">
            <summary>
            The default color frame height (1080).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_DEPTH_WIDTH">
            <summary>
            The default depth/infrared frame width (512).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.DEFAULT_DEPTH_HEIGHT">
            <summary>
            The default depth/infrared frame height (424).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.Culture">
            <summary>
            Specifies the Culture used in number formatting.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameSingleSize1920">
            <summary>
            Image frame at single size equals with 1920 * 1080. (2073600)
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameBufferSize1920">
            <summary>
            Image frame at buffer size equals with 1920 * 1080 * 3 because alpha is not included. (6220800)
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameFullSize1920">
            <summary>
            Image frame at full size equals with 1920 * 1080 * 4 because alpha is included. (8294400)
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameSingleSize960">
            <summary>
            Image frame at single size equals with 960 * 540.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameBufferSize960">
            <summary>
            Image frame at buffer size equals with 960 * 540 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameFullSize960">
            <summary>
            Image frame at full size equals with 960 * 540 * 4 because alpha is included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameSingleSize640">
            <summary>
            Image frame at single size equals with 640 * 360.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameBufferSize640">
            <summary>
            Image frame at buffer size equals with 640 * 360 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameFullSize640">
            <summary>
            Image frame at full size equals with 640 * 360 * 4 because alpha is included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameSingleSize480">
            <summary>
            Image frame at single size equals with 480 * 270.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameBufferSize480">
            <summary>
            Image frame at buffer size equals with 480 * 270 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameFullSize480">
            <summary>
            Image frame at full size equals with 480 * 270 * 4 because alpha is included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameSingleSize384">
            <summary>
            Image frame at single size equals with 384 * 216.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameBufferSize384">
            <summary>
            Image frame at buffer size equals with 384 * 216 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameFullSize384">
            <summary>
            Image frame at full size equals with 384 * 216 * 4 because alpha is included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameSingleSize192">
            <summary>
            Image frame at single size equals with 192 * 108.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameBufferSize192">
            <summary>
            Image frame at buffer size equals with 192 * 108 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.colorImgFrameFullSize192">
            <summary>
            Image frame at full size equals with 192 * 108 * 4 because alpha is included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.depthInfraredImgFrameSingleSize">
            <summary>
            Image frame at single size equals with 512 * 424.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.depthInfraredImgFrameBufferSize">
            <summary>
            Image frame at buffer size equals with 512 * 424 * 3 because alpha is not included.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Constants.depthInfraredImgFrameFullSize">
            <summary>
            Image frame at full size equals with 512 * 424 * 4 because alpha is included.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Face">
            <summary>
            Represents a High Definition Face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Quality">
            <summary>
            The quality of the current face alignment.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Alignment">
            <summary>
            The alignment of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.IsTracked">
            <summary>
            Determines whether the current face is tracked.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.IsTrackingIdValid">
            <summary>
            Determines whether the current face belongs to a tracked player.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Map2D">
            <summary>
            The point mapping on 2D of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Vertices">
            <summary>
            The complete set of face vertices.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Points">
            <summary>
            A set of <see cref="T:Microsoft.Kinect.Face.HighDetailFacePoints"/>.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Orientation">
            <summary>
            The orientation of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.HeadPivotPoint">
            <summary>
            The head pivot point of the current face.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.AnimationUnits">
            <summary>
            The face animation units of the current face (e.g. Jaw Open, Eye Closed, etc).
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Face.GetAnimationUnit(Microsoft.Kinect.Face.FaceShapeAnimations)">
            <summary>
            Returns the confidence of the given face animation unit.
            </summary>
            <param name="animation">The proeprty to check for.</param>
            <returns>The estimated level of confidence (0 to 1).</returns>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeLeft">
            <summary>
            Returns the center of the Left Eye.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeRight">
            <summary>
            Returns the center of the Right Eye.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Jaw">
            <summary>
            Returns the center of the Jaw.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Mouth">
            <summary>
            Returns the position of the center of the Mouth.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekLeft">
            <summary>
            Returns the position of the Left Cheek.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekRight">
            <summary>
            Returns the position of the Right Cheek.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Forehead">
            <summary>
            Returns the position of the Forehead.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Nose">
            <summary>
            Returns the center of the Nose.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Chin">
            <summary>
            Returns the position of the Chin.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeLeft2D">
            <summary>
            Returns the center of the Left Eye.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.EyeRight2D">
            <summary>
            Returns the center of the Right Eye.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Jaw2D">
            <summary>
            Returns the center of the Jaw.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Mouth2D">
            <summary>
            Returns the position of the center of the Mouth.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekLeft2D">
            <summary>
            Returns the position of the Left Cheek.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.CheekRight2D">
            <summary>
            Returns the position of the Right Cheek.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Forehead2D">
            <summary>
            Returns the position of the Forehead.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Nose2D">
            <summary>
            Returns the center of the Nose.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Face.Chin2D">
            <summary>
            Returns the position of the Chin.
            USE THIS PROPERTY FOR VIDEO PLAYBACK ONLY.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Face.SetMap2D(Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Sets the 2D positions of the primary Face points.
            </summary>
            <param name="coordinateMapper">The coordinate mapper to use.</param>
            <param name="visualization">The visualization (color, depth, or infrared).</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Capture">
            <summary>
            Provides some common methods for capturing and saving Kinect frames to disk.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Capture.Save(UnityEngine.Texture2D,System.String)">
            <summary>
            Captures the specified image source and saves it to the specified location.
            </summary>
            <param name="bitmap">The image source to capture.</param>
            <param name="file">The desired file path, including file name and extension, for the new image. Currently, JPEG and PNG formats are supported.</param>
            <returns>True if the bitmap file was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Capture.Save(System.String,System.String)">
            <summary>
            Saves the specified string content to the specified location.
            </summary>
            <param name="content">The string data to save.</param>
            <param name="file">The destination path for the file.</param>
            <returns>True if the bitmap file was successfully saved. False otherwise.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Floor">
            <summary>
            Provides the information regarding the floor plane.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Floor.MinHeight">
            <summary>
            The minimum height recommendation for placing the Kinect sensor.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Floor.MaxHeight">
            <summary>
            The maximum height recommendation for placing the Kinect sensor.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.X">
            <summary>
            The X value of the FloorClipPlane quaternion.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.Y">
            <summary>
            The Y value of the FloorClipPlane quaternion.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.Z">
            <summary>
            The Z value of the FloorClipPlane quaternion.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.W">
            <summary>
            The W value of the FloorClipPlane quaternion.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.Height">
            <summary>
            Returns the height of the sensor.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.Tilt">
            <summary>
            Returns the sensor's tilt angle (in degrees).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.FieldOfView">
            <summary>
            Returns whether the Kinect FOV is OK.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Floor.Plane">
            <summary>
            Returns the floor plane.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Floor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.Floor"/>.
            </summary>
            <param name="x">The X value of the FloorClipPlane quaternion.</param>
            <param name="y">The Y value of the FloorClipPlane quaternion.</param>
            <param name="z">The Z value of the FloorClipPlane quaternion.</param>
            <param name="w">The W value of the FloorClipPlane quaternion.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Floor.#ctor(Windows.Kinect.Vector4)">
            <summary>
            Creates a new instance of <see cref="T:LightBuzz.Vitruvius.Floor"/>.
            </summary>
            <param name="floorClipPlane">The FloorClipPlane quaternion that describes the floor.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Floor.DistanceFrom(Windows.Kinect.CameraSpacePoint)">
            <summary>
            Calculates the distance between the specified joint and the floor.
            </summary>
            <param name="point">The point to measure the distance from.</param>
            <returns>The distance between the floor and the point (in meters).</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.FieldOfView">
            <summary>
            Specifies whether the Kinect Field Of View is OK.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FieldOfView.OK">
            <summary>
            The Kinect field of view is OK.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FieldOfView.Limited">
            <summary>
            The Kinect field of view is limited.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Visualization">
            <summary>
            Represents the visualization mode.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Visualization.Color">
            <summary>
            Color mode (1920x1080).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Visualization.Depth">
            <summary>
            Depth mode (512x424).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Visualization.Infrared">
            <summary>
            Infrared mode (512x424).
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.BitmapExtensions">
            <summary>
            Provides some common functionality for manipulating bitmaps.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._colorBitmapGenerator">
            <summary>
            The color bitmap generator.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._depthBitmapGenerator">
            <summary>
            The depth bitmap generator.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._infraredBitmapGenerator">
            <summary>
            The color bitmap generator.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BitmapExtensions._greenScreenBitmapGenerator">
            <summary>
            The background removal generator.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.ColorFrame)">
            <summary>
            Converts the specified color frame to a bitmap image.
            </summary>
            <param name="frame">The specified color frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.ColorFrame,System.Byte[]@)">
            <summary>
            Converts the specified color frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified color frame.</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.ColorFrame,LightBuzz.Vitruvius.ColorFrameResolution)">
            <summary>
            Converts the specified color frame to a bitmap image.
            </summary>
            <param name="frame">The specified color frame.</param>
            <param name="size">The new size of the frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.ColorFrame,LightBuzz.Vitruvius.ColorFrameResolution,System.Byte[]@)">
            <summary>
            Converts the specified color frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified color frame.</param>
            <param name="size">The new size of the frame.</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.DepthFrame)">
            <summary>
            Converts the specified depth frame to a bitmap image.
            </summary>
            <param name="frame">The specified depth frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.DepthFrame,System.Byte[]@)">
            <summary>
            Converts the specified depth frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified depth frame.</param>
            <param name="pixels">The actual pixels of the depth frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame)">
            <summary>
            Converts the specified depth and infrared frames to a bitmap image with the players highlighted.
            </summary>
            <param name="frame">The specified depth frame.</param>
            <param name="bodyIndexFrame">The specified body index frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.Byte[]@)">
            <summary>
            Converts the specified depth and infrared frames to a bitmap image with the players highlighted and outs the pixels.
            </summary>
            <param name="frame">The specified depth frame.</param>
            <param name="bodyIndexFrame">The specified body index frame.</param>
            <param name="pixels">The actual pixels of the depth frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.InfraredFrame)">
            <summary>
            Converts the specified infrared frame to a bitmap image.
            </summary>
            <param name="frame">The specified infrared frame.</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(Windows.Kinect.InfraredFrame,System.Byte[]@)">
            <summary>
            Converts the specified infrared frame to a bitmap image and outs the pixels.
            </summary>
            <param name="frame">The specified infrared frame.</param>
            <param name="pixels">The actual pixels of the infrared frame</param>
            <returns>The bitmap representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.Byte[]@)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Windows.Kinect.DepthFrame,Windows.Kinect.ColorFrame,Windows.Kinect.BodyIndexFrame)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Windows.Kinect.DepthFrame,Windows.Kinect.ColorFrame,Windows.Kinect.BodyIndexFrame,System.Byte[]@)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <param name="pixels">The actual pixels of the depth frame</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreen(Windows.Kinect.BodyIndexFrame,Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect).
            </summary>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreenHD(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.Byte[]@)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect) in HD.
            </summary>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <param name="cutout">The cutout pixels of the color frame</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreenHD(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.Byte[]@,System.Int32,System.Int32)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect) in HD.
            </summary>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <param name="cutout">The cutout pixels of the color frame</param>
            <param name="beginX">Begin reading pixels from X</param>
            <param name="endX">End reading pixels until X</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreenHD(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.Byte[]@,System.Byte[]@)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect) in HD.
            </summary>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <param name="cutout">The cutout pixels of the color frame</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.GreenScreenHD(Windows.Kinect.ColorFrame,Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.Byte[]@,System.Byte[]@,System.Int32,System.Int32)">
            <summary>
            Removes the background of the specified frames and generates a new bitmap (green-screen effect) in HD.
            </summary>
            <param name="colorFrame">The specified <see cref="T:Windows.Kinect.ColorFrame"/>.</param>
            <param name="depthFrame">The specified <see cref="T:Windows.Kinect.DepthFrame"/>.</param>
            <param name="bodyIndexFrame">The specified <see cref="T:Windows.Kinect.BodyIndexFrame"/>.</param>
            <param name="cutout">The cutout pixels of the color frame</param>
            <param name="pixels">The actual pixels of the color frame</param>
            <param name="beginX">Begin reading pixels from X</param>
            <param name="endX">End reading pixels until X</param>
            <returns>The bitmap representation of the generated frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.ToBitmap(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a bitmap representation of the specified byte array.
            </summary>
            <param name="bytes">The byte array that contains the bitmap data.</param>
            <param name="width">The width of the bitmap.</param>
            <param name="height">The height of the bitmap.</param>
            <returns>A bitmap created from the byte array.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.Load(UnityEngine.Texture2D,System.Byte[],System.Boolean)">
            <summary>
            Loads a byte array source into the image.
            </summary>
            <param name="image"></param>
            <param name="src"></param>
            <param name="compressed"></param>
        </member>
        <member name="M:LightBuzz.Vitruvius.BitmapExtensions.FlipVertically(UnityEngine.Texture2D)">
            <summary>
            Rotates the current bitmap 180 degrees.
            </summary>
            <param name="image">The bitmap to rotate.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.BodyExtensions">
            <summary>
            Provides some common functionality for manupulating body data.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyExtensions._bodies">
            <summary>
            The body collection a Kinect sensor can recognize.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyExtensions._sortedBodies">
            <summary>
            The body collection sorted by tracking accuracy and distance.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyExtensions._trackingID">
            <summary>
            The tracking ID of the active body.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Bodies(Windows.Kinect.BodyFrame)">
            <summary>
            Returns the bodies found in the current frame.
            </summary>
            <param name="frame">The BodyFrame generated by the Kinect sensor.</param>
            <returns>An array of bodies or an empty array if no bodies were found.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Closest(System.Collections.Generic.IEnumerable{Windows.Kinect.Body})">
            <summary>
            Returns the closest body that is currently to the sensor.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The closest tracked body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Active(System.Collections.Generic.IEnumerable{Windows.Kinect.Body})">
            <summary>
            Returns the active body. The active body is the one that is tracked well and stands within a reasonable distance.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The active player body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Sort(System.Collections.Generic.IEnumerable{Windows.Kinect.Body})">
            <summary>
            Sorts the tracked bodies by tracking accuracy. The most active body is the first in the list.
            To find the active body, the tracking ID and distance are taking into consideration.
            </summary>
            <param name="bodies">A list of bodies.</param>
            <returns>A rearranged list of the tracked bodies, sorted by tracking accuracy and distance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.IsStable(Windows.Kinect.Body,System.Single,System.Single)">
            <summary>
            Determines whether the current body is stable, without leaning.
            </summary>
            <param name="body">The body to examine.</param>
            <param name="thresholdX">The accepted lean bound in the X axis. Defaults to 0.2</param>
            <param name="thresholdY">The accepted lean bound in the Y axis. Defaults to 0.3.</param>
            <returns>True if the body is stable. False if the body is leaning on one side.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.RotationAngle(Windows.Kinect.Body)">
            <summary>
            Calculates the rotation of the specified body in the vertical axis.
            </summary>
            <param name="body">The current body.</param>
            <returns>The rotation angle in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Height(Windows.Kinect.Body,LightBuzz.Vitruvius.Floor)">
            <summary>
            Calculates the height of the person using the distance from the floor.
            </summary>
            <param name="body">The body of the tracked player.</param>
            <param name="floor">The floor.</param>
            <returns>The height of the person, in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.Height(Windows.Kinect.Body)">
            <summary>
            Retruns the height of the current body.
            </summary>
            <param name="body">The specified user body.</param>
            <returns>The height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.UpperHeight(Windows.Kinect.Body)">
            <summary>
            Returns the upper height of the current body (head to waist).
            </summary>
            <param name="body">A user body.</param>
            <returns>The upper height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.TrackedJoints(Windows.Kinect.Body,System.Boolean)">
            <summary>
            Returns a collection of the tracked joints of the current body.
            </summary>
            <param name="body">A user body.</param>
            <param name="includeInferred">True to include the joints with a TrackingState of Tracked or Inferred. False to include only the joints with a TrackingState of Tracked.</param>
            <returns>A collection of the tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.NumberOfTrackedJoints(System.Collections.Generic.IEnumerable{Windows.Kinect.Joint})">
            <summary>
            Calculates the number of the tracked joints from the current collection.
            </summary>
            <param name="joints">A collection of joints.</param>
            <returns>The number of the accurately tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.NumberOfTrackedJoints(Windows.Kinect.Joint[])">
            <summary>
            Calculates the number of the tracked joints from the specified collection.
            </summary>
            <param name="joints">A collection of joints.</param>
            <returns>The number of the accurately tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.ToBodyWrapper(Windows.Kinect.Body)">
            <summary>
            Converts the specified Body object into its BodyWrapper equivalent.
            </summary>
            <param name="body">The Body to convert.</param>
            <returns>A <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> representation of the current Body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyExtensions.ToBodyWrapper(Windows.Kinect.Body,Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Converts the specified Body object into its BodyWrapper equivalent.
            </summary>
            <param name="body">The Body to convert.</param>
            <param name="coordinateMapper">The coordinate mapper that will be used to map the joints in the 2D space.</param>
            <param name="visualization">The 2D <see cref="T:LightBuzz.Vitruvius.Visualization"/> (Color, Depth, Infrared).</param>
            <returns>A <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> representation of the current Body.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.BodyWrapperExtensions">
            <summary>
            Provides some common functionality for manupulating body wrapper data.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyWrapperExtensions._sortedBodies">
            <summary>
            The body collection sorted by tracking accuracy and distance.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyWrapperExtensions._trackingID">
            <summary>
            The tracking ID of the active body.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BodyWrapperExtensions._matcher">
            <summary>
            The pose matching algorithm.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Closest(System.Collections.Generic.IEnumerable{LightBuzz.Vitruvius.BodyWrapper})">
            <summary>
            Returns the closest body that is currently to the sensor.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The closest tracked body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Active(System.Collections.Generic.IEnumerable{LightBuzz.Vitruvius.BodyWrapper})">
            <summary>
            Returns the active body. The active body is the one that is tracked well and stands within a reasonable distance.
            </summary>
            <param name="bodies">A list of bodies to look at.</param>
            <returns>The active player body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Sort(System.Collections.Generic.IEnumerable{LightBuzz.Vitruvius.BodyWrapper})">
            <summary>
            Sorts the tracked bodies by tracking accuracy. The most active body is the first in the list.
            To find the active body, the tracking ID and distance are taking into consideration.
            </summary>
            <param name="bodies">A list of bodies.</param>
            <returns>A rearranged list of the tracked bodies, sorted by tracking accuracy and distance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.IsStable(LightBuzz.Vitruvius.BodyWrapper,System.Single,System.Single)">
            <summary>
            Determines whether the current body is stable, without leaning.
            </summary>
            <param name="body">The current body.</param>
            <param name="thresholdX">The accepted lean bound in the X axis. Defaults to 0.2</param>
            <param name="thresholdY">The accepted lean bound in the Y axis. Defaults to 0.3.</param>
            <returns>True if the body is stable. False if the body is leaning on one side.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.RotationAngle(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Calculates the rotation of the specified body wrapper in the vertical axis.
            </summary>
            <param name="body">The current body wrapper.</param>
            <returns>The rotation angle in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Height(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Retruns the height of the current body.
            </summary>
            <param name="body">The specified user body.</param>
            <returns>The height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.UpperHeight(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Returns the upper height of the current body (head to waist).
            </summary>
            <param name="body">A user body.</param>
            <returns>The upper height of the body in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.TrackedJoints(LightBuzz.Vitruvius.BodyWrapper,System.Boolean)">
            <summary>
            Returns a collection of the tracked joints of the current body.
            </summary>
            <param name="body">A user body.</param>
            <param name="includeInferred">True to include the joints with a TrackingState of Tracked or Inferred. False to include only the joints with a TrackingState of Tracked.</param>
            <returns>A collection of the tracked joints.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Match(LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Match(LightBuzz.Vitruvius.BodyWrapper,Windows.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.Match(Windows.Kinect.Body,Windows.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.BodyWrapperExtensions.CopyTo(LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Copies the current body to another <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.
            </summary>
            <param name="thisBody"></param>
            <param name="body">The destination object.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.CaptureExtensions">
            <summary>
            Provides some common funcitonality for saving Kinect data.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.CaptureExtensions._capture">
            <summary>
            The bitmap capture utility.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.LoadImage(UnityEngine.Texture2D,System.Byte[])">
            <summary>
            Loads the byte array to a bitmap.
            </summary>
            <param name="bitmap">The source bitmap image.</param>
            <param name="data">The source byte array.</param>
            <returns>True if the bitmap file was successfully loaded. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(UnityEngine.Texture2D,System.String)">
            <summary>
            Saves the current bitmap to the specified location.
            </summary>
            <param name="bitmap">The source bitmap image.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the bitmap file was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.ColorFrame,System.String)">
            <summary>
            Converts the current color frame to a bitmap and saves it to the specified location.
            </summary>
            <param name="frame">The source color frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.DepthFrame,System.String)">
            <summary>
            Converts the current depth frame to a bitmap and saves it to the specified location.
            </summary>
            <param name="frame">The source depth frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.InfraredFrame,System.String)">
            <summary>
            Converts the current infrared frame to a bitmap and saves it to the specified location.
            </summary>
            <param name="frame">The source infrared frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.DepthFrame,Windows.Kinect.BodyIndexFrame,System.String)">
            <summary>
            Converts the current depth and body index frames to a bitmap and saves it to the specified location.
            </summary>
            <param name="depthFrame">The source depth frame.</param>
            <param name="bodyIndexFrame">The source body index frame.</param>
            <param name="file">The destination path for the new image. JPEG, PNG, GIF, BMP and TIFF formats are supported.</param>
            <returns>True if the image was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.BodyFrame,System.String)">
            <summary>
            Serializes the bodies of the current <see cref="T:Windows.Kinect.BodyFrame"/> and saves the file to the specified location.
            </summary>
            <param name="frame">The frame to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the frame was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(System.Collections.Generic.IEnumerable{Windows.Kinect.Body},System.String)">
            <summary>
            Serializes the current collection of <see cref="T:Windows.Kinect.Body"/> and saves the file to the specified location.
            </summary>
            <param name="bodies">The body collection to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the body collection was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.Body,System.String)">
            <summary>
            Serializes the current <see cref="T:Windows.Kinect.Body"/> and saves the file to the specified location.
            </summary>
            <param name="body">The body to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the body was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.Joint,System.String)">
            <summary>
            Serializes the current <see cref="T:Windows.Kinect.Joint"/> and saves the file to the specified location.
            </summary>
            <param name="joint">The joint to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the joint was successfully saved. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.CaptureExtensions.Save(Windows.Kinect.JointOrientation,System.String)">
            <summary>
            Serializes the current <see cref="T:Windows.Kinect.JointOrientation"/> and saves the file to the specified location.
            </summary>
            <param name="joint">The joint orientation to capture.</param>
            <param name="file">The destination file path.</param>
            <returns>True if the joint orientation was successfully saved. False otherwise.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.ColorFrameResolutionExtensions">
            <summary>
            Provides some common extension methods for the color frame resolution enumeration.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.ColorFrameResolutionExtensions.GetSize(LightBuzz.Vitruvius.ColorFrameResolution)">
            <summary>
            Gets the resolution of the specified value as a 2D point.
            </summary>
            <param name="resolution">The specified resolution value.</param>
            <returns>A 2D-point representation of the resolution (X: width, Y: height).</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.FaceExtensions">
            <summary>
            Provides some common functionality for manupulating HD Face data.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.CENTER_POINTS">
            <summary>
            The indices of the vertical center line vertices.
            Index count: 47
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.CONTOUR">
            <summary>
            The indices of the contour vertices.
            Index count: 62
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.FOREHEAD">
            <summary>
            The indices of the forehead vertices.
            Index count: 103
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LEFT_TEMPLE">
            <summary>
            The indices of the left temple vertices.
            Index count: 30
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.RIGHT_TEMPLE">
            <summary>
            The indices of the right temple vertices.
            Index count: 30
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LEFT_CHEEK">
            <summary>
            The indices of the left cheek vertices.
            Index count: 68
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.RIGHT_CHEEK">
            <summary>
            The indices of the right cheek vertices.
            Index count: 68
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LEFT_EYEBROW">
            <summary>
            The indices of the left eyebrow vertices.
            Index count: 28
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.RIGHT_EYEBROW">
            <summary>
            The indices of the right eyebrow vertices.
            Index count: 28
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LEFT_EYE">
            <summary>
            The indices of the left eye vertices.
            Index count: 81
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.RIGHT_EYE">
            <summary>
            The indices of the right eye vertices.
            Index count: 81
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LEFT_CHEEKBONE">
            <summary>
            The indices of the left cheekbone vertices.
            Index count: 55
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.RIGHT_CHEEKBONE">
            <summary>
            The indices of the right cheekbone vertices.
            Index count: 55
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.NOSE">
            <summary>
            The indices of the nose vertices.
            Index count: 223
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LEFT_NOSTRIL">
            <summary>
            The indices of the left nostril vertices.
            Index count: 10
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.RIGHT_NOSTRIL">
            <summary>
            The indices of the right nostril vertices.
            Index count: 10
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.MUSTACHE">
            <summary>
            The indices of the mustache vertices.
            Index count: 32
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.UPPER_LIP">
            <summary>
            The indices of the upper lip vertices.
            Index count: 81
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.MOUTH">
            <summary>
            The indices of the mouth vertices.
            Index count: 77
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LOWER_LIP">
            <summary>
            The indices of the lower lip vertices.
            Index count: 81
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.LEFT_JAW">
            <summary>
            The indices of the left jaw vertices.
            Index count: 75
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.RIGHT_JAW">
            <summary>
            The indices of the right jaw vertices.
            Index count: 75
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.FaceExtensions.CHIN">
            <summary>
            The indices of the chin vertices.
            Index count: 114
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Face(Microsoft.Kinect.Face.HighDefinitionFaceFrame)">
            <summary>
            Returns the HD face that is associated to the current <see cref="T:Microsoft.Kinect.Face.HighDefinitionFaceFrame"/>.
            </summary>
            <param name="frame">The HD face frame.</param>
            <returns>The corresponding HD Face instance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Face(Microsoft.Kinect.Face.HighDefinitionFaceFrame,Windows.Kinect.CoordinateMapper,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Returns the HD face that is associated to the current <see cref="T:Microsoft.Kinect.Face.HighDefinitionFaceFrame"/> and updates the 2D visualization of the primary face points.
            </summary>
            <param name="frame">The HD face frame.</param>
            <param name="coordinateMapper">The coordinate mapper to use.</param>
            <param name="visualization">The visualization (color, depth, or infrared).</param>
            <returns>The corresponding HD Face instance.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyeLeftPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Eye.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Left Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyeRightPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Eye.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Right Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyebrowLeftPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Eye.
            </summary>
            <param name="face">A list of vertices.</param>
            <returns>A set of points that form the Left Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.EyebrowRightPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Eye.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Right Eye.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.CheekLeftPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Cheek.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Left Cheek.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.CheekRightPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Cheek.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Right Cheek.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.NosePoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Nose.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Nose.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.MouthPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Mouth.
            </summary>
            <param name="face">The current face.</param>
            <returns>A set of points that form the Mouth.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.JawPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Jaw.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>A set of points that form the Jaw.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.CenterPoints(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the center of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The vertically central points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Contour(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points that form the Contour of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The points that form the Contour.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Forehead(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Forehead of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Forehead points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LeftTemple(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Temple of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Left Temple points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.RightTemple(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Temple of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Right Temple points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LeftCheek(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Cheek of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Left Cheek points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.RightCheek(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Cheek of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Right Cheek points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LeftEyebrow(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Eyebrow of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Left Eyebrow points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.RightEyebrow(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Eyebrow of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Right Eyebrow points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LeftEye(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Eye of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Left Eye points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.RightEye(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Eye of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Right Eye points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LeftCheekbone(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Cheekbone of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Left Cheekbone points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.RightCheekbone(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Cheekbone of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Right Cheekbone points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Nose(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Nose of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Nose points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LeftNostril(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Nostril of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Left Nostril points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.RightNostril(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Nostril of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Right Nostril points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Mustache(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Mustache of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Mustache points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.UpperLip(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Upper Lip of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Upper Lip points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Mouth(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Mouth of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Mouth points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LowerLip(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Lower Lip of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Lower Lip points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.LeftJaw(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Left Jaw of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Left Jaw points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.RightJaw(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Right Jaw of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Right Jaw points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.Chin(LightBuzz.Vitruvius.Face)">
            <summary>
            Returns the HD Face points associated to the Chin of the Face.
            </summary>
            <param name="face">The current HD Face.</param>
            <returns>The Chin points.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.GetFacePoint(LightBuzz.Vitruvius.Face,System.Int32)">
            <summary>
            Returns the HD Face point associated to the specified index.
            </summary>
            <param name="face">The current HD Face.</param>
            <param name="index">The index associated to a specified face point.</param>
            <returns>An HD face point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.GetFacePoints(LightBuzz.Vitruvius.Face,Microsoft.Kinect.Face.HighDetailFacePoints[])">
            <summary>
            Returns the HD Face points associated to the specified indices.
            </summary>
            <param name="face">The current HD Face.</param>
            <param name="indices">The indices of the desired <see cref="T:Microsoft.Kinect.Face.HighDetailFacePoints"/>.</param>
            <returns>A set of facial points in the 3D space.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FaceExtensions.GetFacePoints(LightBuzz.Vitruvius.Face,System.Int32[])">
            <summary>
            Returns the HD Face points associated to the specified indices.
            </summary>
            <param name="face">The current HD Face.</param>
            <param name="indices">The indices of the desired vertices.</param>
            <returns>A set of facial points in the 3D space.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.FloorExtensions">
            <summary>
            Provides extension methods about the floor plane and sensor height/angle.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.FloorExtensions.Floor(Windows.Kinect.BodyFrame)">
            <summary>
            Returns the available information about the floor, as seen by Kinect.
            </summary>
            <param name="frame">The <see cref="T:Windows.Kinect.BodyFrame"/> that includes the floor information.</param>
            <returns>A new instance of Floor, with all the available information (height, tilt, etc).</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.FloorExtensions.Floor(Windows.Kinect.Vector4)">
            <summary>
            Returns the available information about the floor, as seen by Kinect.
            </summary>
            <param name="quaternion">The FloorClipPlane quaternion that includes the floor information.</param>
            <returns>A new instance of Floor, with all the available information (height, tilt, etc).</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.MathExtensions">
            <summary>
            Provides some commonly used Mathematical functions.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToRadians(System.Double)">
            <summary>
            Converts the specified angle from degrees to radians.
            </summary>
            <param name="angle">The angle, in degrees.</param>
            <returns>The same angle in radians.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToRadians(System.Single)">
            <summary>
            Converts the specified angle from degrees to radians.
            </summary>
            <param name="angle">The angle, in degrees.</param>
            <returns>The same angle in radians.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToDegrees(System.Double)">
            <summary>
            Converts the specified angle from radians to degrees.
            </summary>
            <param name="angle">The angle, in radians.</param>
            <returns>The same angle in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToDegrees(System.Single)">
            <summary>
            Converts the specified angle from radians to degrees.
            </summary>
            <param name="angle">The angle, in radians.</param>
            <returns>The same angle in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToCentimeters(System.Double)">
            <summary>
            Converts the specified value from meters to centimeters.
            </summary>
            <param name="meters">The value in meters.</param>
            <returns>The same value in centimeters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToCentimeters(System.Single)">
            <summary>
            Converts the specified value from meters to centimeters.
            </summary>
            <param name="meters">The value in meters.</param>
            <returns>The same value in centimeters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToInches(System.Double)">
            <summary>
            Converts the specified value from meters to inches.
            </summary>
            <param name="meters">The value in meters.</param>
            <returns>The same value in inches.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToInches(System.Single)">
            <summary>
            Converts the specified value from meters to inches.
            </summary>
            <param name="meters">The value in meters.</param>
            <returns>The same value in inches.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToFeet(System.Double)">
            <summary>
            Converts the specified value from meters to feet.
            </summary>
            <param name="meters">The value in meters.</param>
            <returns>The same value in feet.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToFeet(System.Single)">
            <summary>
            Converts the specified value from meters to feet.
            </summary>
            <param name="meters">The value in meters.</param>
            <returns>The same value in feet.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToMeters(System.Double)">
            <summary>
            Converts the specified value from inches to meters.
            </summary>
            <param name="inches">The value in inches.</param>
            <returns>The same value in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToMeters(System.Single)">
            <summary>
            Converts the specified value from inches to meters.
            </summary>
            <param name="inches">The value in inches.</param>
            <returns>The same value in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(UnityEngine.Vector2)">
            <summary>
            Covnerts the specified point into a 2-D vector.
            </summary>
            <param name="vector">The vector to convert.</param>
            <returns>The corresponding 2-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Windows.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Visualization,Windows.Kinect.CoordinateMapper)">
            <summary>
            Converts the specified CameraSpacePoint into a 2-D point.
            </summary>
            <param name="position">The CameraSpacePoint to convert.</param>
            <param name="visualization">The type of the conversion (color, depth, or infrared).</param>
            <param name="coordinateMapper">The CoordinateMapper to make the conversion.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Windows.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Converts the specified CameraSpacePoint into a 2-D point.
            </summary>
            <param name="position">The CameraSpacePoint to convert.</param>
            <param name="visualization">The type of the conversion (color, depth, or infrared).</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Windows.Kinect.ColorSpacePoint)">
            <summary>
            Converts the specified ColorSpacePoint into a 2-D point.
            </summary>
            <param name="position">The ColorSpacePoint to convert.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(Windows.Kinect.DepthSpacePoint)">
            <summary>
            Converts the specified DepthSpacePoint into a 2-D point.
            </summary>
            <param name="position">The DepthSpacePoint to convert.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(UnityEngine.Vector3,LightBuzz.Vitruvius.Visualization,Windows.Kinect.CoordinateMapper)">
            <summary>
            Converts the specified Vector3 into a 2-D point.
            </summary>
            <param name="position">The Vector3 to convert.</param>
            <param name="visualization">The type of the conversion (color, depth, or infrared).</param>
            <param name="coordinateMapper">The CoordinateMapper to make the conversion.</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToPoint(UnityEngine.Vector3,LightBuzz.Vitruvius.Visualization)">
            <summary>
            Converts the specified Vector3 into a 2-D point.
            </summary>
            <param name="position">The Vector3 to convert.</param>
            <param name="visualization">The type of the conversion (color, depth, or infrared).</param>
            <returns>The corresponding 2-D point.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector3(Windows.Kinect.CameraSpacePoint)">
            <summary>
            Converts the specified CameraSpacePoint into a 3-D vector structure.
            </summary>
            <param name="point">The CameraSpacePoint to convert</param>
            <returns>The corresponding 3-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector3(Windows.Kinect.ColorSpacePoint)">
            <summary>
            Converts the specified ColorSpacePoint into a 3-D vector structure.
            </summary>
            <param name="point">The ColorSpacePoint to convert</param>
            <returns>The corresponding 3-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector3(Windows.Kinect.DepthSpacePoint)">
            <summary>
            Converts the specified DepthSpacePoint into a 3-D vector structure.
            </summary>
            <param name="point">The DepthSpacePoint to convert</param>
            <returns>The corresponding 3-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToVector2(Windows.Kinect.PointF)">
            <summary>
            Converts the specified 2-D point into a 2-D vector structure.
            </summary>
            <param name="point">The point to convert</param>
            <returns>The corresponding 2-D vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.IsNaN(UnityEngine.Vector3)">
            <summary>
            Determines whether the current vector values are numbers.
            </summary>
            <param name="vector">The specified vector to check.</param>
            <returns>True if any of the values is not a number. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.ToStringDetailed(UnityEngine.Vector3)">
            <summary>
            Creates a detailed string representation of the current vector.
            </summary>
            <param name="vector">The specified vector.</param>
            <returns>A detailed string representation of the vector.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Windows.Kinect.CameraSpacePoint,Windows.Kinect.CameraSpacePoint,Windows.Kinect.CameraSpacePoint)">
            <summary>
            Calculates the angle between the specified points.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Windows.Kinect.CameraSpacePoint,Windows.Kinect.CameraSpacePoint,Windows.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Axis)">
            <summary>
            Calculates the angle between the specified points around the specified axis.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <param name="axis">The axis around which the angle is calculated.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Windows.Kinect.ColorSpacePoint,Windows.Kinect.ColorSpacePoint,Windows.Kinect.ColorSpacePoint)">
            <summary>
            Calculates the angle between the specified points.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Windows.Kinect.DepthSpacePoint,Windows.Kinect.DepthSpacePoint,Windows.Kinect.DepthSpacePoint)">
            <summary>
            Calculates the angle between the specified points.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Windows.Kinect.Joint,Windows.Kinect.Joint,Windows.Kinect.Joint)">
            <summary>
            Calculates the angle between the specified body joints.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Angle(Windows.Kinect.Joint,Windows.Kinect.Joint,Windows.Kinect.Joint,LightBuzz.Vitruvius.Axis)">
            <summary>
            Calculates the angle between the specified body joints around the specified axis.
            </summary>
            <param name="center">The center of the angle.</param>
            <param name="start">The start of the angle.</param>
            <param name="end">The end of the angle.</param>
            <param name="axis">The axis around which the angle is calculated.</param>
            <returns>The angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Tilt(Windows.Kinect.CameraSpacePoint,Windows.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Axis)">
            <summary>
            Calculates the tilt/rotation of the specified segment around the specified axis.
            </summary>
            <param name="first">The start of the segment.</param>
            <param name="second">The end of the segment.</param>
            <param name="axis">The axis.</param>
            <returns>The rotation/tilt angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Tilt(Windows.Kinect.Joint,Windows.Kinect.Joint,LightBuzz.Vitruvius.Axis)">
            <summary>
            Calculates the tilt/rotation of the specified segment around the specified axis.
            </summary>
            <param name="first">The start of the segment.</param>
            <param name="second">The end of the segment.</param>
            <param name="axis">The axis.</param>
            <returns>The rotation/tilt angle, in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.DistanceFromPoint(Windows.Kinect.CameraSpacePoint,Windows.Kinect.CameraSpacePoint)">
            <summary>
            Calculates the distance between the current point and the specified point in the 3D space.
            </summary>
            <param name="current">The first point.</param>
            <param name="point">The second point.</param>
            <returns>The distance, in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.DistanceFromPlane(Windows.Kinect.CameraSpacePoint,Windows.Kinect.Vector4)">
            <summary>
            Calculates the distance between the current point and the specified plane in the 3D space.
            </summary>
            <param name="point">The current point.</param>
            <param name="plane">The plane to measure the distance from.</param>
            <returns>The distance, in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.DistanceFromFloor(Windows.Kinect.CameraSpacePoint,LightBuzz.Vitruvius.Floor)">
            <summary>
            Calculates the distance between the current point and the floor in the 3D space.
            </summary>
            <param name="point">The current point.</param>
            <param name="floor">The floor.</param>
            <returns>The distance, in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Length(Windows.Kinect.CameraSpacePoint)">
            <summary>
            Calculates the length of the specified 3-D point.
            </summary>
            <param name="point">The specified 3-D point.</param>
            <returns>The corresponding length, in meters.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Length(Windows.Kinect.CameraSpacePoint,Windows.Kinect.CameraSpacePoint)">
            <summary>
            Returns the length of the segment defined by the specified points.
            </summary>
            <param name="point1">The first point (start of the segment).</param>
            <param name="point2">The second point (end of the segment).</param>
            <returns>The length of the segment (in meters).</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.MathExtensions.Length(Windows.Kinect.CameraSpacePoint[])">
            <summary>
            Returns the length of the segments defined by the specified points.
            </summary>
            <param name="points">A collection of two or more points.</param>
            <returns>The length of all the segments in meters.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.OrientationExtensions">
            <summary>
            Provides extension methods for transforming quaternions to rotations.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.OrientationExtensions.Roll(Windows.Kinect.Vector4)">
            <summary>
            Rotates the specified quaternion around the X axis.
            </summary>
            <param name="quaternion">The orientation quaternion.</param>
            <returns>The rotation in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.OrientationExtensions.Pitch(Windows.Kinect.Vector4)">
            <summary>
            Rotates the specified quaternion around the Y axis.
            </summary>
            <param name="quaternion">The orientation quaternion.</param>
            <returns>The rotation in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.OrientationExtensions.Yaw(Windows.Kinect.Vector4)">
            <summary>
            Rotates the specified quaternion around the Z axis.
            </summary>
            <param name="quaternion">The orientation quaternion.</param>
            <returns>The rotation in degrees.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.OrientationExtensions.ToQuaternion(Windows.Kinect.JointOrientation)">
            <summary>
            Converts the current joint orientation to a quaternion.
            </summary>
            <param name="orientation">The specified joint orientation.</param>
            <returns>The corresponding quaternion.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.OrientationExtensions.ToQuaternion(Windows.Kinect.Vector4)">
            <summary>
            Converts the current <see cref="T:Windows.Kinect.Vector4"/> to a quaternion.
            </summary>
            <param name="vector">The specified vector.</param>
            <returns>The corresponding quaternion.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.SerializationExtensions">
            <summary>
            Provides some common functionality for serializing and deserializing body data to JSON.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Windows.Kinect.BodyFrame)">
            <summary>
            Serializes the current <see cref="T:Windows.Kinect.BodyFrame"/> to JSON.
            </summary>
            <param name="frame">The frame to serialize.</param>
            <returns>A JSON representation of the current frame.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(System.Collections.Generic.IEnumerable{Windows.Kinect.Body})">
            <summary>
            Serializes the current collection of <see cref="T:Windows.Kinect.Body"/> to JSON.
            </summary>
            <param name="bodies">The body collection to serialize.</param>
            <returns>A JSON representation of the current body collection.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Windows.Kinect.Body)">
            <summary>
            Serializes the current <see cref="T:Windows.Kinect.Body"/> to JSON.
            </summary>
            <param name="body">The body to serialize.</param>
            <returns>A JSON representation of the current body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Serializes the current <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> to JSON.
            </summary>
            <param name="body">The body wrapper to serialize.</param>
            <returns>A JSON representation of the current body.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Windows.Kinect.Joint)">
            <summary>
            Serializes the current <see cref="T:Windows.Kinect.Joint"/> to JSON.
            </summary>
            <param name="joint">The joint to serialize.</param>
            <returns>A JSON representation of the current joint.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(Windows.Kinect.JointOrientation)">
            <summary>
            Serializes the current <see cref="T:Windows.Kinect.JointOrientation"/> to JSON.
            </summary>
            <param name="joint">The joint to serialize.</param>
            <returns>A JSON representation of the current joint orientation.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(LightBuzz.Vitruvius.Floor)">
            <summary>
            Converts a <see cref="T:LightBuzz.Vitruvius.Floor"/> to JSON.
            </summary>
            <param name="floor">The floor to serialize.</param>
            <returns>A JSON representation of the current Floor.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToJSON(LightBuzz.Vitruvius.Face)">
            <summary>
            Converts an HD <see cref="T:LightBuzz.Vitruvius.Face"/> to JSON.
            </summary>
            <param name="face">The HD Face to serialize.</param>
            <returns>A JSON representation of the current HD Face.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToBody(System.String)">
            <summary>
            Converts the current JSON-formatted string to a <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.
            </summary>
            <param name="json">The JSON-formatted string to deserialize.</param>
            <returns>The corresponding <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToFace(System.String)">
            <summary>
            Converts the current JSON-formatted string to an HD <see cref="T:LightBuzz.Vitruvius.Face"/> object.
            </summary>
            <param name="json">The JSON-formatted string to deserialize.</param>
            <returns>The corresponding <see cref="T:LightBuzz.Vitruvius.Face"/> object.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.SerializationExtensions.ToFloor(System.String)">
            <summary>
            Converts the current JSON-formatted string to a Floor object.
            </summary>
            <param name="json">The JSON-formatted string to deserialize.</param>
            <returns>The corresponding <see cref="T:LightBuzz.Vitruvius.Floor"/>object.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3Extensions.GetEquivalentPointInTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Gets the equivalent point of the first triangle, in the second one.
            </summary>
            <param name="a1">First corner of the first triangle</param>
            <param name="b1">Second corner of the first triangle</param>
            <param name="c1">Third corner of the first triangle</param>
            <param name="a2">First corner of the second triangle</param>
            <param name="b2">Second corner of the second triangle</param>
            <param name="c2">Third corner of the second triangle</param>
            <param name="point">The point in the first triangle</param>
            <returns>The equivalent point in the second triangle</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3Extensions.IsInsideTheTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Checks whether the point is inside the triangle.
            </summary>
            <param name="a">First corner of the triangle</param>
            <param name="b">Second corner of the triangle</param>
            <param name="c">Third corner of the triangle</param>
            <param name="point">The point to check</param>
            <returns>Whether the point is inside the triangle.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Vector3Extensions.FloorVector(UnityEngine.Vector2)">
            <summary>
            Floors the X and Y of the vector, to int.
            </summary>
            <param name="vector"></param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gesture">
            <summary>
            Represents a Kinect gesture.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture.WINDOW_SIZE">
            <summary>
            The window size.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture.MAX_PAUSE_COUNT">
            <summary>
            The maximum number of frames allowed for a paused gesture.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._currentSegment">
            <summary>
            The current gesture segment we are matching against.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._pausedFrameCount">
            <summary>
            The number of frames to pause for when a pause is initiated.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._frameCount">
            <summary>
            The current frame.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.Gesture._isPaused">
            <summary>
            Are we paused?
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.Gesture"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.#ctor(LightBuzz.Vitruvius.GestureType,LightBuzz.Vitruvius.IGestureSegment[])">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.Gesture"/> with the specified type and segments.
            </summary>
            <param name="type">The type of gesture.</param>
            <param name="segments">The segments of the gesture.</param>
        </member>
        <member name="E:LightBuzz.Vitruvius.Gesture.GestureRecognized">
            <summary>
            Occurs when a gesture is recognised.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Gesture.GestureType">
            <summary>
            The type of the current gesture.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Gesture.Segments">
            <summary>
            The segments which form the current gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body data.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gesture.Reset">
            <summary>
            Resets the current gesture.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.GestureController">
            <summary>
            Represents a gesture controller.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureController._gestures">
            <summary>
            A list of all the gestures the controller is searching for.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureController"/> with all of the available gesture types.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.#ctor(LightBuzz.Vitruvius.GestureType)">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureController"/> with the specified gesture type.
            </summary>
            <param name="type">The gesture type to recognize.</param>
        </member>
        <member name="E:LightBuzz.Vitruvius.GestureController.GestureRecognized">
            <summary>
            Occurs when a gesture is recognized.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates all gestures.
            </summary>
            <param name="body">The body data to search for gestures.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.AddGesture(LightBuzz.Vitruvius.GestureType)">
            <summary>
            Adds the specified gesture for recognition.
            </summary>
            <param name="type">The predefined <see cref="T:LightBuzz.Vitruvius.GestureType" />.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureController.OnGestureRecognized(System.Object,LightBuzz.Vitruvius.GestureEventArgs)">
            <summary>
            Handles the GestureRecognized event of the g control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:LightBuzz.Vitruvius.GestureEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.GestureEventArgs">
            <summary>
            The gesture event arguments.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.GestureEventArgs.GestureType">
            <summary>
            Gets the gesture type.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.GestureEventArgs.TrackingID">
            <summary>
            Gets the skeleton tracking ID for the gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureEventArgs.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureEventArgs"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.GestureEventArgs.#ctor(LightBuzz.Vitruvius.GestureType,System.UInt64)">
            <summary>
            Initializes a new instance of <see cref="T:LightBuzz.Vitruvius.GestureEventArgs"/>.
            </summary>
            <param name="type">The gesture type.</param>
            <param name="trackingID">The tracking ID.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.GesturePartResult">
            <summary>
            Represents the gesture part recognition result.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GesturePartResult.Failed">
            <summary>
            Gesture part failed.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GesturePartResult.Succeeded">
            <summary>
            Gesture part succeeded.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GesturePartResult.Undetermined">
            <summary>
            Gesture part result undetermined.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.GestureType">
            <summary>
            Represents the predefined gesture types.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.JoinedHands">
            <summary>
            Hands joined in front of chest.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.WaveRight">
            <summary>
            Waving using the right hand.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.WaveLeft">
            <summary>
            Waving using the left hand.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.Menu">
            <summary>
            Hand slightly bent above hip (XBOX-like gesture).
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeLeft">
            <summary>
            Hand moved horizontally from right to left.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeRight">
            <summary>
            Hand moved horizontally from left to right.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeUp">
            <summary>
            Hand moved vertically from hip center to head.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.SwipeDown">
            <summary>
            Hand moved vertically from head to hip center.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.ZoomIn">
            <summary>
            Both hands extended closer to the chest.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.GestureType.ZoomOut">
            <summary>
            Both hands extended farther from the chest.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.IGestureSegment">
            <summary>
            Represents a single gesture segment which uses relative positioning of body parts to detect a gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.IGestureSegment.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.NamespaceDoc">
            <summary>
            Implements an extendable Kinect gesture engine, with some pre-defined gestures.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.MenuSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.Menu"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.MenuSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.JoinedHandsSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.JoinedHands"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.JoinedHandsSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment2.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeLeftSegment3.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeRightSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeRightSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeRightSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeRightSegment2.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeRightSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeRightSegment3.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeUpSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeUp"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeUpSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeUpSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeUp"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeUpSegment2.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeUpSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeUp"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeUpSegment3.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeDownSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeDown"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeDownSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeDownSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeDown"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeDownSegment2.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.SwipeDownSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.SwipeDown"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.SwipeDownSegment3.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveLeftSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveLeftSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveLeftSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveLeft"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveLeftSegment2.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveRightSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveRightSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.WaveRightSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.WaveRight"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.WaveRightSegment2.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.ZoomSegment1">
            <summary>
            The first part of a <see cref="F:LightBuzz.Vitruvius.GestureType.ZoomIn"/>/<see cref="F:LightBuzz.Vitruvius.GestureType.ZoomOut"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.ZoomSegment1.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.ZoomSegment2">
            <summary>
            The second part of a <see cref="F:LightBuzz.Vitruvius.GestureType.ZoomIn"/>/<see cref="F:LightBuzz.Vitruvius.GestureType.ZoomOut"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.ZoomSegment2.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Gestures.ZoomSegment3">
            <summary>
            The third part of a <see cref="F:LightBuzz.Vitruvius.GestureType.ZoomIn"/>/<see cref="F:LightBuzz.Vitruvius.GestureType.ZoomOut"/> gesture.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Gestures.ZoomSegment3.Update(LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Updates the current gesture.
            </summary>
            <param name="body">The body.</param>
            <returns>A GesturePartResult based on whether the gesture part has been completed.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Legacy.NamespaceDoc">
            <summary>
            [deprecated]
            The Legacy namespace includes Vitruvius components that are deprecated and will be no longer supported.
            Examples: KinectVideoRecorder and KinectVideoPlayer prior to Vitruvius 4.0.0.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Legacy.KinectVideoCompressor">
            <summary>
            [deprecated]
            Compresses the raw binary data using JPEG and JSON compression.
            The source .bin file is split into its corresponding .jpg and .json files.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoCompressor.Compress(System.String,System.String)">
            <summary>
            Compresses the specified video folder.
            </summary>
            <param name="sourceFolder">The folder that contains the raw binary files.</param>
            <param name="destinationFolder">The folder where the binary files will be compressed.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Legacy.KinectVideoFrame">
            <summary>
            [deprecated]
            Represents a Kinect video frame.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Legacy.KinectVideoPlayer">
            <summary>
            [deprecated]
            Video Player plays back an image frame, a kinect body and a kinect face.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoPlayer.Play">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoPlayer.Play(System.Single)">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoPlayer.Play(System.Boolean)">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoPlayer.Play(System.Single,System.Boolean)">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoPlayer.Stop">
            <summary>
            Stops the player.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder">
            <summary>
            [deprecated]
            Video Recorder records an image frame, a kinect body and a kinect face.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.StartRecorder">
            <summary>
            Starts the recorder.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.Stop">
            <summary>
            Stops the recorder.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.Stop(System.Single@)">
            <summary>
            Stops the recorder.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.Stop(System.Single@,System.Int32@)">
            <summary>
            Stops the recorder.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.RecordFrame(System.Byte[],LightBuzz.Vitruvius.Visualization,LightBuzz.Vitruvius.ColorFrameResolution,LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.Face,System.Boolean)">
            <summary>
            Records a frame.
            </summary>
            <param name="image"></param>
            <param name="visualization"></param>
            <param name="resolution"></param>
            <param name="body"></param>
            <param name="face"></param>
            <param name="isGreenScreen"></param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.Compress">
            <summary>
            Compresses the exported frames in the default path.
            Use after the recorder has stopped.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.Compress(System.String)">
            <summary>
            Compresses the exported frames into the given path.
            Use after the recorder has stopped.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Legacy.KinectVideoRecorder.Compress(System.String,System.String)">
            <summary>
            Compresses the exported frames from a source path into a destination path.
            Use after the recorder has stopped.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.NamespaceDoc">
            <summary>
            A set of powerful Kinect extensions.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.BaseController`1">
            <summary>
            Generic class used to extract information from a series of frames.
            </summary>
            <typeparam name="T">The parameter we control, e.g. a Body.</typeparam>
        </member>
        <member name="F:LightBuzz.Vitruvius.BaseController`1.DEFAULT_WINDOW_SIZE">
            <summary>
            The default window size.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BaseController`1._windowSize">
            <summary>
            The window size of the reporter.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.BaseController`1._isRunning">
            <summary>
            Indicates whether the reporter is running.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.#ctor">
            <summary>
            Creates a new instance of the controller.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BaseController`1.WindowSize">
            <summary>
            Gets or sets the window size for the reporter.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.BaseController`1.IsRunning">
            <summary>
            Determines whether the reporter is running.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.Start">
            <summary>
            Starts the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.Stop">
            <summary>
            Stops the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.BaseController`1.Update(`0)">
            <summary>
            Updates the controller.
            </summary>
            <param name="value">The parameters used to update the controller.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.PlayersController">
            <summary>
            Notifies when one or more players enter or leave the scene.
            </summary>
        </member>
        <member name="F:LightBuzz.Vitruvius.PlayersController._consecutiveFrames">
            <summary>
            The number of the consecutive frames.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.PlayersController.BodyLeft">
            <summary>
            Occurs when a body leaves the field of view.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.PlayersController.BodyEntered">
            <summary>
            Occurs when a body enters the field of view.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PlayersController.Start">
            <summary>
            Starts the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PlayersController.Stop">
            <summary>
            Stops the controller.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PlayersController.Update(System.Collections.Generic.IEnumerable{Windows.Kinect.Body})">
            <summary>
            Updates the controller.
            </summary>
            <param name="bodies">The bodies to gather data from.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.PlayersControllerEventArgs">
            <summary>
            The information the reported gives back to the calling function.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PlayersControllerEventArgs.Players">
            <summary>
            The tracking IDs of the people who entered or exited.
            </summary>
        </member>
        <member name="T:LightBuzz.Vitruvius.PoseMatching">
            <summary>
            Provides a method to compare body states and poses.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.#ctor">
            <summary>
            Creates a new instance of the pose matching class.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the pose matching class with the specified parameters.
            </summary>
            <param name="checkHead">Consider or ignore the head.</param>
            <param name="checkArmLeft">Consider or ignore the left arm.</param>
            <param name="checkArmRight">Consider or ignore the right arm.</param>
            <param name="checkSpine">Consider or ignore the spine.</param>
            <param name="checkLegLeft">Consider or ignore the left leg.</param>
            <param name="checkLegRight">Consider or ignore the right leg.</param>
        </member>
        <member name="F:LightBuzz.Vitruvius.PoseMatching.DeviationBodyRotation">
            <summary>
            The allowed deviation of the rotation of the body (0.0 - 1.0).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckHead">
            <summary>
            Consider or ignore the head.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckArmLeft">
            <summary>
            Consider or ignore the left arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckArmRight">
            <summary>
            Consider or ignore the right arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckSpine">
            <summary>
            Consider or ignore the spine.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckLegLeft">
            <summary>
            Consider or ignore the left leg.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.CheckLegRight">
            <summary>
            Consider or ignore the right leg.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationHead">
            <summary>
            The allowed deviation between the position of the head.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationArmLeft">
            <summary>
            The allowed deviation between the position of the left arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationArmRight">
            <summary>
            The allowed deviation between the position of the right arm.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationSpine">
            <summary>
            The allowed deviation between the position of the spine.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationLegLeft">
            <summary>
            The allowed deviation between the position of the left leg.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.PoseMatching.DeviationLegRight">
            <summary>
            The allowed deviation between the position of the right leg.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.Matches(LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.BodyWrapper)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.Matches(Windows.Kinect.Body,Windows.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.PoseMatching.Matches(LightBuzz.Vitruvius.BodyWrapper,Windows.Kinect.Body)">
            <summary>
            Determines whether the poses of the specified bodies match.
            </summary>
            <param name="body1">The first body to compare.</param>
            <param name="body2">The second body to compare.</param>
            <returns>True if the poses match. False otherwise.</returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Video.KinectVideoFrame">
            <summary>
            Represents a Kinect video frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoFrame.Image">
            <summary>
            The image, in binary format.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoFrame.Visualization">
            <summary>
            The visualization type (color, depth, or infrared).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoFrame.Resolution">
            <summary>
            The resolution of the color image.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoFrame.Body">
            <summary>
            The <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/>.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoFrame.Face">
            <summary>
            The HD <see cref="T:LightBuzz.Vitruvius.Face"/>.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoFrame.Floor">
            <summary>
            The <see cref="T:LightBuzz.Vitruvius.Floor"/>.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoFrame.ExportFrame(System.String,System.Byte[],LightBuzz.Vitruvius.Visualization,LightBuzz.Vitruvius.ColorFrameResolution,LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.Face)">
            <summary>
            Exports the specified data to the specified path.
            </summary>
            <param name="path">The file path.</param>
            <param name="imageData">The image data.</param>
            <param name="visualization">The visualization type.</param>
            <param name="resolution">The resolution of the color frame.</param>
            <param name="body">The body.</param>
            <param name="face">The HD face.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoFrame.ExportFrame(System.String,System.Byte[],LightBuzz.Vitruvius.Visualization,LightBuzz.Vitruvius.ColorFrameResolution,LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.Face,LightBuzz.Vitruvius.Floor)">
            <summary>
            Exports the specified data to the specified path.
            </summary>
            <param name="path">The file path.</param>
            <param name="imageData">The image data.</param>
            <param name="visualization">The visualization type.</param>
            <param name="resolution">The resolution of the color frame.</param>
            <param name="body">The body.</param>
            <param name="face">The HD face.</param>
            <param name="floor">The floor.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Video.KinectVideoPlayer">
            <summary>
            Video Player plays back an image frame, a kinect body and a kinect face.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoPlayer.FrameArrived">
            <summary>
            Notifies when a new video frame is available.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoPlayer.NormalizedFrameArrived">
            <summary>
            Notifies when a new vido frame with normalized <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> data is available.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Started">
            <summary>
            Notifies when the video has started playing.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Finished">
            <summary>
            Notifies when the video has finished playing.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Paused">
            <summary>
            Notifies when the video was paused.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Seeking">
            <summary>
            Fires when the video is seeking to a frame.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.#ctor">
            <summary>
            Creates a new Kinect video player.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Path">
            <summary>
            The full path to the video folder.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.NormalizedBodies">
            <summary>
            A list of <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> objects with normalized joint coordinates.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.FrameCount">
            <summary>
            The total number of frames recorded.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.FrameIndex">
            <summary>
            The index of the current video frame.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Time">
            <summary>
            The current video time.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Speed">
            <summary>
            The speed of the video (positive number).
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.IsSeeking">
            <summary>
            Determines whether the video playback will use extended seeking.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Seek">
            <summary>
            Seeks to the specified position.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Duration">
            <summary>
            The duration of the video.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Loop">
            <summary>
            Specifies whether the video will loop.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.IsPlaying">
            <summary>
            Determines whether the current video is playing.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.IsPaused">
            <summary>
            Determines whether the current video is paused.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoPlayer.RecordingDuration">
            <summary>
            The real recording time in seconds.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Update">
            <summary>
            Updates the video player and moves to the next frame, based on the specified time and speed.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Play">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Play(System.Single)">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Play(System.Boolean)">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Play(System.Single,System.Boolean)">
            <summary>
            Starts the player if it's stopped or resume if it's paused.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Pause">
            <summary>
            Pauses the current video.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Stop">
            <summary>
            Stops the player.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.Clear">
            <summary>
            Clears the normalized <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> objects.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.UpdateFrame">
            <summary>
            Updates the frame at the current index.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.UpdateFrame(System.Int32)">
            <summary>
            Updates the frame at the current index.
            </summary>
            <param name="frameIndex">The specified video frame index.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.GetNormalizedBody(System.Int32)">
            <summary>
            Returns the <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object at the specified video frame index.
            </summary>
            <param name="frameIndex">The video frame index.</param>
            <returns>The corresponding normalized <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> object.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.GetFloors(System.Boolean)">
            <summary>
            Loads the <see cref="T:LightBuzz.Vitruvius.Floor"/> data from the current video.
            </summary>
            <param name="compressed">Determines whether the video consists of compressed files.</param>
            <returns>>A list of <see cref="T:LightBuzz.Vitruvius.Floor"/> objects.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.ComputeNormalizedBodies(System.Boolean)">
            <summary>
            Creates normalized <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> data from the current video.
            </summary>
            <param name="compressed">Determines whether the video consists of compressed files.</param>
            <returns>A list of normalized <see cref="T:LightBuzz.Vitruvius.BodyWrapper"/> objects.</returns>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.ReadFrame(System.Int32,LightBuzz.Vitruvius.BodyWrapper@,LightBuzz.Vitruvius.Face@,LightBuzz.Vitruvius.Floor@,System.Boolean)">
            <summary>
            Reads the video frame at the specified index.
            </summary>
            <param name="frameIndex">The index of the video frame.</param>
            <param name="body"></param>
            <param name="face"></param>
            <param name="floor"></param>
            <param name="compressed"></param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.ReadFrame(System.Int32,System.Byte[]@,LightBuzz.Vitruvius.Visualization@,LightBuzz.Vitruvius.ColorFrameResolution@,LightBuzz.Vitruvius.BodyWrapper@,LightBuzz.Vitruvius.Face@,LightBuzz.Vitruvius.Floor@,System.Boolean)">
            <summary>
            
            </summary>
            <param name="frameIndex"></param>
            <param name="image"></param>
            <param name="visualization"></param>
            <param name="resolution"></param>
            <param name="body"></param>
            <param name="face"></param>
            <param name="floor"></param>
            <param name="compressed"></param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoPlayer.ReadFrame(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="frameIndex"></param>
            <param name="compressed"></param>
            <returns></returns>
        </member>
        <member name="T:LightBuzz.Vitruvius.Video.KinectVideoRecorder">
            <summary>
            Video Recorder records an image frame, a kinect body and a kinect face.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoRecorder.Started">
            <summary>
            Notifies when the video recording is started.
            </summary>
        </member>
        <member name="E:LightBuzz.Vitruvius.Video.KinectVideoRecorder.Finished">
            <summary>
            Notifies when the video recording is finished.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.Path">
            <summary>
            The full path to the video folder.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.FrameIndex">
            <summary>
            The current recording frame index.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.IsRecording">
            <summary>
            Determines whether the recorder is currently recording frames.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.IsRunning">
            <summary>
            Determines whether the background tasks have finished or whether the process is still running.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.FrameCount">
            <summary>
            The total number of frames recorded.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.StartTime">
            <summary>
            The exact time the recording started.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.EndTime">
            <summary>
            The exact time the recording ended.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoRecorder.RecordingDuration">
            <summary>
            The real recording time in seconds.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoRecorder.#ctor">
            <summary>
            Creates a new Kinect video recorder.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoRecorder.Start">
            <summary>
            Starts the recorder.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoRecorder.Stop">
            <summary>
            Stops the recorder.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoRecorder.Record(System.Byte[],LightBuzz.Vitruvius.Visualization,LightBuzz.Vitruvius.ColorFrameResolution,LightBuzz.Vitruvius.BodyWrapper,LightBuzz.Vitruvius.Face,LightBuzz.Vitruvius.Floor,System.Boolean)">
            <summary>
            Records a video frame.
            </summary>
            <param name="image">The image data (RGB or RGBA).</param>
            <param name="visualization">The visualization type (Color, Depth, or Infrared).</param>
            <param name="resolution">The resolution of the Color frame. If the Visualization parameter is set to Depth or Infrared, this parameter is ignored.</param>
            <param name="body">The body data.</param>
            <param name="face">The face data.</param>
            <param name="floor">The floor plane data.</param>
            <param name="isGreenScreen">Determines whether the color frame is recorded with alpha transparency.</param>
        </member>
        <member name="T:LightBuzz.Vitruvius.Video.KinectVideoCompressor">
            <summary>
            Compresses the raw binary data using JPEG and JSON compression.
            The source .bin file is split into its corresponding .jpg and .json files.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoCompressor.IsCompressing">
            <summary>
            Returns the compression state.
            </summary>
        </member>
        <member name="P:LightBuzz.Vitruvius.Video.KinectVideoCompressor.Progress">
            <summary>
            Returns the compression progress.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoCompressor.StartCompression(System.String,System.String)">
            <summary>
            Starts the compression of the specified video folder.
            </summary>
            <param name="sourceFolder">The folder that contains the raw binary files.</param>
            <param name="destinationFolder">The folder where the binary files will be compressed.</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoCompressor.StartCompression(System.String,System.String,System.Boolean)">
            <summary>
            Starts the compression of the specified video folder.
            </summary>
            <param name="sourceFolder">The folder that contains the raw binary files.</param>
            <param name="destinationFolder">The folder where the binary files will be compressed.</param>
            <param name="useMultipleThreads">If the compression should use more than one threads</param>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoCompressor.UpdateCompression">
            <summary>
            Updates the compression.
            </summary>
        </member>
        <member name="M:LightBuzz.Vitruvius.Video.KinectVideoCompressor.StopCompression">
            <summary>
            Stops the compression.
            </summary>
        </member>
        <member name="T:FaceNode">
            <summary>
            Provides information about a specific node.
            </summary>
        </member>
        <member name="P:FaceNode.Index">
            <summary>
            The corresponding index of the node.
            </summary>
        </member>
        <member name="P:FaceNode.RawPosition">
            <summary>
            The raw position of the current node, as provided by the sensor.
            </summary>
        </member>
        <member name="P:FaceNode.Position">
            <summary>
            The position of the current node.
            </summary>
        </member>
        <member name="T:JointInfo">
            <summary>
            Provides information about a specific joint.
            </summary>
        </member>
        <member name="P:JointInfo.RawPosition">
            <summary>
            The raw position of the current joint, as provided by the sensor.
            </summary>
        </member>
        <member name="P:JointInfo.RawOrientation">
            <summary>
            The raw orientation of the current joint, as provided by the sensor.
            </summary>
        </member>
        <member name="P:JointInfo.Position">
            <summary>
            The position of the current joint.
            </summary>
        </member>
        <member name="P:JointInfo.NormalRotation">
            <summary>
            The rotation of the current joint.
            </summary>
        </member>
        <member name="P:JointInfo.MirroredRotation">
            <summary>
            The mirrorred rotation of the current joint.
            </summary>
        </member>
        <member name="P:JointInfo.JointType">
            <summary>
            The type of the current joint.
            </summary>
        </member>
        <member name="P:JointInfo.TrackingState">
            <summary>
            The tracking state of the current joint.
            </summary>
        </member>
    </members>
</doc>
